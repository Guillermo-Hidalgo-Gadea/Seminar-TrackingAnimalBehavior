import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

file =  'path/filename.csv'

data = pd.read_csv(file, header=0)

data.info()

np.shape(data)

data

coords = data.loc[:,~data.columns.str.contains('score|error|ncams|fnum|center|M_')]

scores = data.loc[:, data.columns.str.contains('score')]

# Let us transform the data to be centered around a reference point
centered_coords = coords.copy()
for i in range(centered_coords.shape[1]):
    if '_x' in centered_coords.columns[i]:
        centered_coords.loc[:,centered_coords.columns[i]] = centered_coords.loc[:,centered_coords.columns[i]].subtract(coords.loc[:,"nose1_x"].values)
    elif '_y' in centered_coords.columns[i]:
        centered_coords.loc[:,centered_coords.columns[i]] = centered_coords.loc[:,centered_coords.columns[i]].subtract(coords.loc[:,"nose1_y"].values)
    elif '_z' in centered_coords.columns[i]:
        centered_coords.loc[:,centered_coords.columns[i]] = centered_coords.loc[:,centered_coords.columns[i]].subtract(coords.loc[:,"nose1_z"].values)
    else:
        pass

coords_egocentric = centered_coords.to_numpy()

coords_egocentric.shape()

coords_egocentric

np.reshape(scores, (a, b))

coords.mean(axis = 'columns')

coords.mean(axis = 'index')

coords[''].mean()

coords.describe()

scores.hist()

scores.boxplot()

x_coords = coords.loc[:,coords.columns.str.contains('_x')]
y_coords = coords.loc[:,coords.columns.str.contains('_y')]
z_coords = coords.loc[:,coords.columns.str.contains('_z')]

t = 0

fig = plt.figure(figsize=(6, 4), dpi = 100)
ax = fig.add_subplot(projection='3d')
x_points = x_coords[t:t+1]
y_points = y_coords[t:t+1]
z_points = z_coords[t:t+1]

ax.scatter3D(x_points,y_points, z_points)
ax.view_init(11, 280)
ax.set(xlabel='X axis', ylabel='Y axis', zlabel='Z axis')

plt.title("My First Plot")
        
